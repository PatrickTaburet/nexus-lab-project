# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    code_directory: '%kernel.project_dir%/public/code'
    avatar_directory: '%kernel.project_dir%/public/images/avatar'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Twig\ClassNameExtension:
        tags:
            - { name: twig.extension }
    App\EventListener\JWTCreatedListener:
        tags:
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_jwt_created', method: 'onJWTCreated' }
    App\EventListener\RefreshTokenListener:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }
    App\Factory\SceneDataFactory:
        arguments:
            $scenesMap:
                SceneD1:
                    entityClass: App\Entity\SceneD1
                    formType: App\Form\SaveArtworkD1Type
                    routeName: sceneD1
                    sceneType: data_scene
                    repository: '@App\Repository\SceneD1Repository'
                SceneD2:
                    entityClass: App\Entity\SceneD2
                    formType: App\Form\SaveArtworkD2Type
                    routeName: sceneD2
                    sceneType: data_scene
                    repository: '@App\Repository\SceneD2Repository'
                Scene1:
                    entityClass: App\Entity\Scene1
                    formType: App\Form\SaveArtworkG1Type
                    routeName: sceneG1
                    sceneType: generative_scene
                    repository: '@App\Repository\Scene1Repository'
                Scene2:
                    entityClass: App\Entity\Scene2
                    formType: App\Form\SaveArtworkG2Type
                    routeName: sceneG2
                    sceneType: generative_scene
                    repository: '@App\Repository\Scene2Repository'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

{% extends 'base.html.twig' %}

{% block title %}Random Line Walkers{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/generative.css') }}">
{% endblock %}

{% block body %}

{# Modale : save artwork  #}

{% include 'partials/_modale_saveArtwork.html.twig' %}

{# End modale #}

{# ---------------------- #}

<div class="headerTitle">
    <img class="titleImg" src={{asset("/images/design/title2.png")}} alt="Title square">
    <h1>RANDOM LINE WALKERS</h1>
</div>

<div class="mainContainer">

{# Left Side #}

    <div class="leftSide">
        <div class="labelBox">
            <a href="{{ path('generativeHome')}}">Generative <br> Art</a>
            <img class="LabelImg" src={{asset("/images/design/Title-square2.png")}} alt="Generative Art">
        </div>
        <div class="descriptionBox">
            <div class="card-border">
                <div class="card ">
                    <div class="card-title">
                        Description
                    </div>
                    <img class="arrow1" src={{asset("/images/design/arrow.png")}} alt="Description arrow">
                    <div class="separator"></div>
                    <div class="card-content">
                        <div class="descriptionContent">
                            This scene is a generator of randomly moving lines, called walkers. <br> By clicking with your mouse (or finger), you can make these walkers appear wherever you desire. They will then move in a more or less random manner according to the parameters you choose. <br>
                            You can influence the style, number, and movement of these walkers! Experiment with different settings and admire the results !
                        </div>                    
                    </div>
                </div>
            </div>
        </div>
        <img class="CyberCircleImg" src={{asset("/images/design/circle1.png")}} alt="Cyber-circle">
        <img class="hexaImg" src={{asset("/images/design/hexa.png")}} alt="Cyber-hexagon">
    </div>
    
{# sketch #}

    <div id="sketch"></div>

{# parameters control pannel #}

    <div class="parametersBox">
        <div class="card-border">
            <div class="card ">
                <div class="card-title">
                    Control parameters
                </div>
                <div class="separator"></div>
                <div class="card-content">

                    {# Parameters sliders #}

                    {% set sliders = [
                        {'label': 'Color', 'id': 'colorSlider', 'min': 1, 'max': 360, 'value': scene.color, 'step': 10},
                        {'label': 'Number of lines', 'id': 'lineSlider', 'min': 1, 'max': 200, 'value': scene.num_line, 'step': 1},
                        {'label': 'Weight', 'id': 'weightSlider', 'min': 0.2, 'max': 10, 'value': scene.weight, 'step': 0.1},
                        {'label': 'Saturation', 'id': 'saturationSlider', 'min': 0, 'max': 100, 'value': scene.saturation, 'step': 5},
                        {'label': 'Opacity', 'id': 'opacitySlider', 'min': 0.05, 'max': 1, 'value': scene.opacity, 'step': 0.05},
                        {'label': 'Velocity', 'id': 'velocitySlider', 'min': 0, 'max': 15, 'value': scene.velocity, 'step': 0.1},
                        {'label': 'Noise octaves', 'id': 'noiseOctaveSlider', 'min': 0, 'max': 10, 'value': scene.noiseOctave, 'step': 1},
                        {'label': 'Noise falloff', 'id': 'noiseFalloffSlider', 'min': 0, 'max': 1, 'value': scene.noiseFalloff, 'step': 0.05}
                    ] %}

                    {% for slider in sliders %}
                    <div class="sliderBox">
                        <p>{{ slider.label }}</p>
                        <div class="range-wrap">
                            <input type="range" class="range" id="{{ slider.id }}" min="{{ slider.min }}" max="{{ slider.max }}" value="{{ slider.value }}" step="{{ slider.step }}">
                            <output class="bubble"></output>
                        </div>
                    </div>
                    {% endfor %}

                    <div class="checkboxContainer">
                        <p>Stop and go</p>
                        <input type="checkbox" id="checkboxStop">
                    </div>
                    <div class="buttonBox">
                        <button id="resetButton" class="customButton generateButton">Reset</button>
                        {% if app.user %}
                            <button class="buttonModale customButton generateButton">Save</button>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>       
    </div>
</div>
{% if app.user %}
    <script>
        let userId = {{ app.user.id }};
    </script>
{% endif %}

<script defer src="{{ asset('js/sketchSceneG1.js') }}"></script>

{% endblock %}

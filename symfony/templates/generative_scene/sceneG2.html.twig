{% extends 'base.html.twig' %}

{% block title %}Noise Orbit{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/generative.css') }}">
{% endblock %}

{% block body %}

{# Modale : save artwork  #}

{% include 'partials/_modale_saveArtwork.html.twig' %}

{# End modale #}

{# ---------------------- #}

<div class="headerTitle">
    <img class="titleImg" src={{ asset("/images/design/title2.png")}} alt="Title square">
    <h1>NOISE ORBIT</h1>
</div>

<div class="mainContainer">

{# Left Side #}

    <div class="leftSide">
        <div class="labelBox">
            <a href="{{ path('generativeHome')}}">Generative <br> Art</a>
            <img class="LabelImg" src={{ asset("/images/design/Title-square2.png")}} alt="Generative Art">
        </div>
        <div class="descriptionBox">
            <div class="card-border">
                <div class="card ">
                    <div class="card-title">
                        Description
                    </div>
                    <img class="arrow1" src={{ asset("/images/design/arrow.png")}} alt="Description arrow">
                    <div class="separator"></div>
                    <div class="card-content">
                        <div class="descriptionContent">
                            Here you can play with the organic movements generated by Perlin noise ! <br><br> This mathematical function generates pseudo-random values that appear smoother and more natural. It produces gradual and fluid variations, unlike completely random noise, making it particularly useful for simulating natural phenomena in computer graphics. <br>
                            Perlin noise is commonly used in video games and computer graphics to generate realistic textures like terrains, clouds, fire, or marble. <br><br>
                            Special thanks to Stevan Dedovic for the tutorial he generously shared, which made the creation of this generative scene possible. <br><br>
                            <a href="https://www.generativehut.com/post/recreating-the-noise-orbit">Tutorial here</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <img class="CyberCircleImg" src={{asset("/images/design/circle1.png")}} alt="Cyber-circle">
        <img class="hexaImg" src={{asset("/images/design/hexa.png")}} alt="Cyber-hexagon">
    </div>
    
{# sketch #}

    <div id="sketch"></div>

{# parameters control pannel #}
    <div class="parametersBox">
        <div class="card-border">
            <div class="card ">
                <div class="card-title">
                    Control parameters
                </div>
                <div class="separator"></div>
                <div class="card-content">

                {# Parameters sliders #}

                   {% set sliders = [
                        {'label': 'Hue color', 'class': 'hueSlider', 'min': 0, 'max': 360, 'value': 180, 'step': 1},
                        {'label': 'Color range', 'class': 'colorRangeSlider', 'min': 0, 'max': 1200, 'value': 600, 'step': 1},
                        {'label': 'Brightness', 'class': 'brightnessSlider', 'min': 0, 'max': 100, 'value': 0, 'step': 1},
                        {'label': 'Movement', 'class': 'moveSlider', 'min': 0, 'max': 1, 'value': 0.08, 'step': 0.005},
                        {'label': 'Deformation A', 'class': 'deformSlider', 'min': 0, 'max': 10, 'value': 0.5, 'step': 0.005},
                        {'label': 'Deformation B', 'class': 'deformSlider2', 'min': 0, 'max': 10, 'value': 0.5, 'step': 0.005},
                        {'label': 'Shape', 'class': 'shapeSlider', 'min': 1, 'max': 10, 'value': 2, 'step': 0.5},
                        {'label': 'Rings', 'class': 'ringsSlider', 'min': 0, 'max': 0.3, 'value': 0, 'step': 0.0005},
                        {'label': 'Diameter', 'class': 'diameterSlider', 'min': 0.001, 'max': 2.5, 'value': 0.4, 'step': 0.005},
                        {'label': 'Zoom', 'class': 'zoomSlider', 'min': 0, 'max': 5, 'value': 1, 'step': 0.005}
                    ] %}

                    {% for slider in sliders %}
                        <div class="sliderBox">
                            <p>{{ slider.label }}</p>
                            <div class="range-wrap">
                                <input type="range" class="range {{ slider.class }}" min="{{ slider.min }}" max="{{ slider.max }}" value="{{ slider.value }}" step="{{ slider.step }}">
                                <output class="bubble"></output>
                            </div>
                        </div>
                    {% endfor %}

                    <div class="buttonBox">
                        <a href="{{ path('sceneG2')}}" class="customButton generateButton">Reset</a>
                        {% if app.user %}
                            <button class="buttonModale customButton generateButton">Save</button>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>       
    </div>
    
    <div id="dataScene" style="display:none" ></div>

</div>
{% if app.user %}
    <script>
        var userId = {{ app.user.id }};
    </script>
{% endif %}
 
<script src="{{ asset('js/sketchSceneG2.js') }}"></script>

{% endblock %}
